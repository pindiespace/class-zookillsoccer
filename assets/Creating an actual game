Building the Game - Part II Compositing
====================
1. CREATE MARKUP

a. Make 3 screens in HTML markup, as DIV elements inside the <div id="game"> tag
	id='start-screen'
	id='game-screen'
	id='end-screen'

b. Inside each screen, create
	header, section, footer
	inside start-screen section, create "start game" button
	inside game-screen section, create canvas
	inside end-screen section, create "replay" and "instructions" buttons

c. Use an HTML5 css button generator to style the button

d. add some default SCSS to see boxes onscreen

e. hide all the screens at start in SCSS

====================
2. ADJUST CLASSES

a. Add a getType function to GamePiece
 /** 
   * return the class of the object
   */
 getClass () {
   return this.constructor.name;
 }

b. Add update and draw functions to GamePiece
 update() {}
 draw() {}

c. Add polymorphic .update() and .draw() methods to Characters

d. Add getCollisionRect and getBoundsRect functions to GamePiece. These will 
   be used to find collisions with walls and Characters

========================
3. BUILD SCREEN CLASSES

a. Save a reference to our parent Game object
 	this.game = config.game;

b. Screens are defined in HTML, so save a reference to our DOM id
 	this.screenId = config.id;

c. Screens also save a reference to the game object in the constructor

d. Screens use the game object to write a copyright into the footer

e. add loadScreen, showScreen, hideScreen, showHeader, hideHeader, showFooter, hideFooter

f. Make a set-state in game which displays the correct screen in the Game object "changeScreen"

g. Edit GameScreen so it auto-hides headers and footers

h. Bind the "play game" button on StartScreen to "startGame" function in Game with addEventListener

===========================
6. BUILD GAME OBJECT

a. Define screen Ids
		// define Id link to DOM
		this.START_SCREEN_ID = "start-screen";
		this.GAME_SCREEN_ID = "game-screen";
		this.END_SCREEN_ID = "end-screen";

b. Define storage for dynamic characters the game needs to process

c. Define multiple functions, startGame, endGame, checkIfComplete, outOfBounds, collideWith, update, draw, gameLoop

d. Import Collider and Mover class

============================







